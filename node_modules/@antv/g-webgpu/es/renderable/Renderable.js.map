{"version":3,"sources":["../../src/renderable/Renderable.ts"],"names":["IDENTIFIER","inject","injectable","named","Renderable","MeshComponentManager","CullableComponentManager","TransformComponentManager","Systems","SceneGraphSystem","attributes","config","meshComponent","transformComponent","entity","cullable","create","mesh","transform","onEntityCreated","material","geometry","Object","keys","forEach","name","undefined","onAttributeChanged","data","visible","parentRenderable","sceneGraphSystem","attach","detach","detachChildren","setUniform","convertAttributeName2UniformName","attributeName","POINT","LINE","GRID"],"mappings":"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","sourcesContent":["import {\n  BufferData,\n  ComponentManager,\n  CullableComponent,\n  Entity,\n  GeometryComponent,\n  HierarchyComponent,\n  IDENTIFIER,\n  MaterialComponent,\n  MeshComponent,\n  SceneGraphSystem,\n  TransformComponent,\n} from '@antv/g-webgpu-core';\nimport { inject, injectable, named } from 'inversify';\n\nexport interface IRenderable<T> {\n  setConfig(config: T): void;\n  setAttributes(attributes: Record<string, BufferData | undefined>): void;\n  setEntity(entity: Entity): void;\n  setMaterial(material: MaterialComponent): void;\n  setGeometry(geometry: GeometryComponent): void;\n}\n\n@injectable()\nexport class Renderable<T = {}> implements IRenderable<T> {\n  public static POINT = 'point';\n  public static LINE = 'line';\n  public static GRID = 'grid';\n\n  protected attributes: Record<string, BufferData> = {};\n  protected config: T;\n\n  @inject(IDENTIFIER.MeshComponentManager)\n  private readonly mesh: ComponentManager<MeshComponent>;\n\n  @inject(IDENTIFIER.CullableComponentManager)\n  private readonly cullable: ComponentManager<CullableComponent>;\n\n  @inject(IDENTIFIER.TransformComponentManager)\n  private readonly transform: ComponentManager<TransformComponent>;\n\n  @inject(IDENTIFIER.Systems)\n  @named(IDENTIFIER.SceneGraphSystem)\n  private readonly sceneGraphSystem: SceneGraphSystem;\n\n  private meshComponent: MeshComponent;\n  private transformComponent: TransformComponent;\n\n  private entity: Entity;\n\n  public getEntity() {\n    return this.entity;\n  }\n\n  public getTransformComponent() {\n    return this.transformComponent;\n  }\n\n  public getMeshComponent() {\n    return this.meshComponent;\n  }\n\n  public setConfig(config: T) {\n    this.config = config;\n  }\n\n  public setEntity(entity: Entity) {\n    this.entity = entity;\n    this.cullable.create(entity);\n    this.meshComponent = this.mesh.create(entity);\n    this.transformComponent = this.transform.create(entity);\n    this.onEntityCreated();\n  }\n\n  public setMaterial(material: MaterialComponent) {\n    this.meshComponent.material = material;\n    return this;\n  }\n\n  public setGeometry(geometry: GeometryComponent) {\n    this.meshComponent.geometry = geometry;\n    return this;\n  }\n\n  public setAttributes(attributes: Record<string, BufferData | undefined>) {\n    Object.keys(attributes).forEach((name) => {\n      if (\n        attributes[name] !== undefined &&\n        attributes[name] !== this.attributes[name]\n      ) {\n        this.onAttributeChanged({\n          name,\n          data: attributes[name]!,\n        });\n        this.attributes[name] = attributes[name]!;\n      }\n    });\n  }\n\n  public setVisible(visible: boolean) {\n    this.meshComponent.visible = visible;\n    return this;\n  }\n\n  public isVisible() {\n    return this.meshComponent.visible;\n  }\n\n  public attach(parentRenderable: Renderable<T>) {\n    this.sceneGraphSystem.attach(this.entity, parentRenderable.entity);\n    return this;\n  }\n\n  public detach() {\n    this.sceneGraphSystem.detach(this.entity);\n    return this;\n  }\n\n  public detachChildren() {\n    this.sceneGraphSystem.detachChildren(this.entity);\n    return this;\n  }\n\n  protected onEntityCreated() {\n    //\n  }\n\n  protected onAttributeChanged({\n    name,\n    data,\n  }: {\n    name: string;\n    data: BufferData;\n  }) {\n    if (this.meshComponent && this.meshComponent.material) {\n      this.meshComponent.material.setUniform(\n        this.convertAttributeName2UniformName(name),\n        data,\n      );\n    }\n  }\n\n  protected convertAttributeName2UniformName(attributeName: string) {\n    return attributeName;\n  }\n}\n"],"file":"Renderable.js"}