{"version":3,"sources":["../src/World.ts"],"names":["createEntity","createWorldContainer","IDENTIFIER","WebGLEngine","WebGPUEngine","WebGPUConstants","inject","injectable","Camera","Kernel","Grid","Line","Point","Renderable","Renderer","Scene","createCanvas","View","World","ConfigService","container","engine","get","RenderEngine","configService","canvas","engineOptions","init","swapChainFormat","TextureFormat","BGRA8Unorm","antialiasing","entity","manager","TransformComponentManager","getComponentByEntity","MeshComponentManager","config","set","type","renderable","getNamed","setConfig","setEntity","params","geometrySystem","Systems","GeometrySystem","createBox","createBufferGeometry","createInstancedBufferGeometry","materialSystem","MaterialSystem","createBasicMaterial","createShaderMaterial","precompiledBundle","kernel","setBundle","JSON","parse","renderer","systems","getAll","forEach","system","tearDown","destroy","interactor","InteractorService","worldContainer","engineClazz","navigator","gpu","isBound","bind","to","inSingletonScope","toSelf","whenTargetNamed","POINT","LINE","GRID","world","setContainer"],"mappings":"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","sourcesContent":["// tslint:disable-next-line:no-reference\n/// <reference path=\"../../../node_modules/@webgpu/types/dist/index.d.ts\" />\nimport {\n  ComponentManager,\n  createEntity,\n  createWorldContainer,\n  Entity,\n  GeometrySystem,\n  // container,\n  IBoxGeometryParams,\n  IConfig,\n  IConfigService,\n  IDENTIFIER,\n  IInteractorService,\n  IRendererService,\n  ISystem,\n  KernelBundle,\n  MaterialSystem,\n  MeshComponent,\n  TransformComponent,\n} from '@antv/g-webgpu-core';\nimport { WebGLEngine, WebGPUEngine } from '@antv/g-webgpu-engine';\n// tslint:disable-next-line:no-submodule-imports\nimport * as WebGPUConstants from '@webgpu/types/dist/constants';\nimport { Container, inject, injectable } from 'inversify';\nimport { Camera } from './camera/Camera';\nimport { Kernel } from './Kernel';\nimport { Grid } from './renderable/grid';\nimport { Line } from './renderable/line';\nimport { Point } from './renderable/point';\nimport { IRenderable, Renderable } from './renderable/Renderable';\nimport { Renderer } from './Renderer';\nimport { Scene } from './Scene';\nimport { createCanvas } from './utils/canvas';\nimport { View } from './View';\n\n@injectable()\nexport class World {\n  public static create(config: Partial<IConfig> = {}) {\n    const worldContainer = createWorldContainer();\n\n    // bind render engine, fallback to WebGL\n    const engineClazz = !navigator.gpu ? WebGLEngine : WebGPUEngine;\n    if (!worldContainer.isBound(IDENTIFIER.RenderEngine)) {\n      worldContainer\n        .bind<IRendererService>(IDENTIFIER.RenderEngine)\n        // @ts-ignore\n        .to(engineClazz)\n        .inSingletonScope();\n    }\n\n    worldContainer.bind(Renderer).toSelf();\n    worldContainer.bind(Kernel).toSelf();\n    worldContainer.bind(Renderable).toSelf();\n    worldContainer.bind(View).toSelf();\n    worldContainer.bind(Camera).toSelf();\n    worldContainer.bind(Scene).toSelf();\n    worldContainer.bind(World).toSelf();\n\n    worldContainer\n      .bind<IRenderable<unknown>>(IDENTIFIER.Renderable)\n      .to(Point)\n      .whenTargetNamed(Renderable.POINT);\n    worldContainer\n      .bind<IRenderable<unknown>>(IDENTIFIER.Renderable)\n      .to(Line)\n      .whenTargetNamed(Renderable.LINE);\n    worldContainer\n      .bind<IRenderable<unknown>>(IDENTIFIER.Renderable)\n      .to(Grid)\n      .whenTargetNamed(Renderable.GRID);\n\n    const world = worldContainer.get(World);\n    world.setContainer(worldContainer);\n    world.setConfig(config);\n    return world;\n  }\n\n  @inject(IDENTIFIER.ConfigService)\n  private readonly configService: IConfigService;\n\n  private container: Container;\n\n  public async getEngine() {\n    const engine = this.container.get<IRendererService>(\n      IDENTIFIER.RenderEngine,\n    );\n    const { canvas, engineOptions } = this.configService.get();\n    await engine.init({\n      canvas: canvas || createCanvas(),\n      swapChainFormat: WebGPUConstants.TextureFormat.BGRA8Unorm,\n      antialiasing: false,\n      ...engineOptions,\n    });\n    return engine;\n  }\n\n  /**\n   * get transform component\n   * @param entity\n   */\n  public getTransformComponent(entity: Entity) {\n    const manager = this.container.get<ComponentManager<TransformComponent>>(\n      IDENTIFIER.TransformComponentManager,\n    );\n    return manager.getComponentByEntity(entity);\n  }\n\n  public getMeshComponent(entity: Entity) {\n    const manager = this.container.get<ComponentManager<MeshComponent>>(\n      IDENTIFIER.MeshComponentManager,\n    );\n    return manager.getComponentByEntity(entity);\n  }\n\n  public setConfig(config: Partial<IConfig>) {\n    this.configService.set(config);\n  }\n\n  public setContainer(container: Container) {\n    this.container = container;\n  }\n\n  public getContainer() {\n    return this.container;\n  }\n\n  public createEntity() {\n    return createEntity();\n  }\n\n  public createScene() {\n    return this.container.get(Scene);\n  }\n\n  public createCamera() {\n    return this.container.get(Camera);\n  }\n\n  public createView() {\n    return this.container.get(View);\n  }\n\n  // public createLight(type: string,) {\n  //   return this.container.getNamed(IDENTIFIER.Light, type)\n  // }\n\n  public createRenderable<T>(entity: Entity, type?: string, config?: T) {\n    const renderable: Renderable = type\n      ? this.container.getNamed(IDENTIFIER.Renderable, type)\n      : this.container.get(Renderable);\n    renderable.setConfig(config || {});\n    renderable.setEntity(entity);\n    return renderable;\n  }\n\n  public createBoxGeometry(params: IBoxGeometryParams) {\n    const geometrySystem = this.container.getNamed<GeometrySystem>(\n      IDENTIFIER.Systems,\n      IDENTIFIER.GeometrySystem,\n    );\n    return geometrySystem.createBox(params);\n  }\n\n  public createBufferGeometry(params?: { vertexCount: number }) {\n    const geometrySystem = this.container.getNamed<GeometrySystem>(\n      IDENTIFIER.Systems,\n      IDENTIFIER.GeometrySystem,\n    );\n    return geometrySystem.createBufferGeometry(params);\n  }\n\n  public createInstancedBufferGeometry(params: {\n    maxInstancedCount: number;\n    vertexCount: number;\n  }) {\n    const geometrySystem = this.container.getNamed<GeometrySystem>(\n      IDENTIFIER.Systems,\n      IDENTIFIER.GeometrySystem,\n    );\n    return geometrySystem.createInstancedBufferGeometry(params);\n  }\n\n  public createBasicMaterial() {\n    const materialSystem = this.container.getNamed<MaterialSystem>(\n      IDENTIFIER.Systems,\n      IDENTIFIER.MaterialSystem,\n    );\n    return materialSystem.createBasicMaterial();\n  }\n\n  public createShaderMaterial(params: {\n    vertexShader: string;\n    fragmentShader: string;\n  }) {\n    const materialSystem = this.container.getNamed<MaterialSystem>(\n      IDENTIFIER.Systems,\n      IDENTIFIER.MaterialSystem,\n    );\n    return materialSystem.createShaderMaterial(params);\n  }\n\n  public createKernel(precompiledBundle: KernelBundle | string) {\n    const kernel = this.container.get(Kernel);\n    if (typeof precompiledBundle === 'string') {\n      kernel.setBundle(JSON.parse(precompiledBundle));\n    } else {\n      kernel.setBundle(precompiledBundle);\n    }\n    kernel.init();\n    return kernel;\n  }\n\n  public createRenderer() {\n    const renderer = this.container.get(Renderer);\n    renderer.container = this.container;\n    renderer.init();\n    return renderer;\n  }\n\n  public destroy() {\n    const systems = this.container.getAll<ISystem>(IDENTIFIER.Systems);\n    systems.forEach((system) => {\n      if (system.tearDown) {\n        system.tearDown();\n      }\n    });\n    const engine = this.container.get<IRendererService>(\n      IDENTIFIER.RenderEngine,\n    );\n    engine.destroy();\n    const interactor = this.container.get<IInteractorService>(\n      IDENTIFIER.InteractorService,\n    );\n    interactor.destroy();\n  }\n}\n"],"file":"World.js"}